const path = require('path');
const { globalObjectKey, appRoot } = require('../constants');

var {
  buildProd,
  jsWhitelist,
  babelIgnore = /(node_modules|bower_components)/
} = global[globalObjectKey];

var use = [
  {
    loader: 'cache-loader',
    options: {
      cacheIdentifier: `js-cache-loader-${
        require('../../package.json').version
      }`,
      cacheDirectory: path.resolve(
        appRoot,
        './node_modules/.cache/cache-loader'
      )
    }
  },
  {
    loader: 'babel-loader',
    options: require('../helpers/babel-config.js')
  }
];

if (buildProd) {
  use.splice(1, 0, {
    loader: 'thread-loader'
  });
}

let jsRule = {
  test: /\.([t|j]sx?)$/,
  use
};

Object.assign(jsRule, {
  exclude: babelIgnore
});

if (jsWhitelist) {
  Object.assign(jsRule, {
    include: jsWhitelist
  });
}

module.exports = jsRule;
