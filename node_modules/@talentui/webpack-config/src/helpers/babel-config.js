const { globalObjectKey } = require('../constants.js');
const fs = require('fs');
const path = require('path');
const cwd = process.cwd();
const {
  targets,
  transformInclude,
  engines,
  buildProd,
  loose,
  transModule: modules,
  language,
  babelrc
} = global[globalObjectKey];
const { languageMixed, languageTs } = require('../constants');

const configPath = {
  rc: path.resolve(cwd, '.babelrc'),
  conf: path.resolve(cwd, 'babel.config.js')
};

const rcExsis = fs.existsSync(configPath.rc);
const configExist = fs.existsSync(configPath.conf);
const customConfExist = rcExsis || configExist;

const config = {
  cacheDirectory: !buildProd,
  babelrc: false
};

const babelConfig = {};

//如果自定义设置使用自定义babel配置并且配置存在，走自定义babel配置
if (babelrc && customConfExist) {
  if (rcExsis) {
    Object.assign(babelConfig, require(configPath.rc));
  }
  //优先使用babel.config.js
  if (configExist) {
    Object.assign(babelConfig, require(configPath.conf));
  }
  Object.assign(config, babelConfig);
} else {
  //如果不存在使用默认配置
  Object.assign(
    config,
    require('@talentui/get-babel-config')({
      targets,
      transformInclude,
      engines,
      loose,
      modules,
      buildProd,
      typescript: [languageMixed, languageTs].includes(language)
    })
  );
}

module.exports = config;
